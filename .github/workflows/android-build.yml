name: Android CI Build

on:
  workflow_dispatch:
    inputs:
      build_label:
        description: '请选择要构建的发布版本 (Choose Build Variant)'
        required: true
        default: '正式版'
        type: choice
        options:
          - 正式版
          - 开发者版

jobs:
  build:
    environment: Release-Signing

    runs-on: ubuntu-latest

    steps:
      - name: 检出代码 (Checkout)
        uses: actions/checkout@v4

      - name: 清理资源目标目录 (Clean Target Resource Dir)
        run: |
          # 强制删除 app/src/main/assets/offline_repo 下的所有内容
          rm -rf app/src/main/assets/offline_repo/*

      - name: 克隆资源仓库并保留 .git (Clone Resources with .git)
        uses: actions/checkout@v4
        with:
          repository: 'XingHeYuZhuan/shiguang_warehouse'
          ref: 'main'
          path: 'app/src/main/assets/offline_repo'
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 运行贡献者数据生成脚本 (Generate Contributors Data)
        run: |
          echo "--- 正在赋予脚本执行权限 ---"
          # 确保脚本路径正确，并赋予执行权限
          chmod +x .github/scripts/build_contributors.sh

          echo "--- 正在执行贡献者数据生成 ---"
          # 运行脚本，它将生成 app/src/main/assets/contributors_data 目录
          .github/scripts/build_contributors.sh    

      - name: 步骤：解析构建标签，确定任务和风味
        id: resolve_vars
        run: |
          LABEL="${{ github.event.inputs.build_label }}"

          case "$LABEL" in
            "正式版")
              TASK="assembleProdRelease"
              FLAVOR="prod"
              ;;
            "开发者版")
              TASK="assembleDevRelease"
              FLAVOR="dev"
              ;;
          esac

          echo "task=$TASK" >> $GITHUB_OUTPUT
          echo "flavor=$FLAVOR" >> $GITHUB_OUTPUT
          echo "已选择：$LABEL，对应 Gradle 任务：$TASK"

      - name: 设置 JDK 21 (Setup JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 设置 Gradle 缓存 (Cache Gradle Dependencies)
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 解码并准备签名密钥文件 (Decode and Prepare Signing Key)
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/release.jks


      - name: 运行动态构建任务 (Build with Dynamic Flavor)
        run: |
          chmod +x ./gradlew
          ./gradlew ${{ steps.resolve_vars.outputs.task }} \
            -Pandroid.injected.signing.store.file="${{ github.workspace }}/app/release.jks" \
            -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}" \
            --stacktrace


      - name: 上传构建产物到仓库 (Upload Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ steps.resolve_vars.outputs.flavor }}-release-apk
          path: app/build/outputs/apk/${{ steps.resolve_vars.outputs.flavor }}/release/*.apk
          retention-days: 7